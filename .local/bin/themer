#!/bin/bash

DOTFILES_DIR="$HOME/.dotfiles"
THEMER_DIR="$DOTFILES_DIR/.config/themer"
TEMPLATES_DIR="$THEMER_DIR/templates"
COLORS_DIR="$THEMER_DIR/colors"
WALLPAPER_DIR="$DOTFILES_DIR/Pictures/Wallpapers"
SHARED_DIR="$HOME/.local/share/themer"
CONFIG_FILE="$THEMER_DIR/config.json"
GENERATED_THEME="$SHARED_DIR/theme.json"

function render() {
	local TEMPLATE="$1"
	local TEMPLATE_ABS=$(realpath "$TEMPLATES_DIR/$TEMPLATE")
	test -f "$TEMPLATE_ABS" || { echo 'Template does not exist.' >&2; exit 1; }

	local DIR=$(dirname "$1")
	local FILE_NAME=$(basename "$1")

	local CONFIG_DIR="$DOTFILES_DIR/$DIR"
	local CONFIG_FILE=$(echo "$DOTFILES_DIR/$DIR/${FILE_NAME%.*}")

	mkdir -p "$CONFIG_DIR"
	mustache $GENERATED_THEME "$TEMPLATE_ABS" > "$CONFIG_FILE"
}

function render_all() {
	local TEMPLATE_ARR=()
	readarray -t TEMPLATE_ARR < <(find $TEMPLATES_DIR -type f -name '*.template' -printf "%P\n")

	for TMPL in "${TEMPLATE_ARR[@]}";
	do
		render "$TMPL"
	done
}

function generate_theme() {
	[ -f "$GENERATED_THEME" ] || rm $GENERATED_THEME 2> /dev/null
	[ -d "$SHARED_DIR" ] || mkdir -p $SHARED_DIR 2> /dev/null

	local OUTPUT=$(jq -r '.' $CONFIG_FILE)

	local OPACITY=$(echo $OUTPUT | jq -r '.opacity' -)
	local OPACITY_INVERSE="$((100-${OPACITY}))"
	local OPACITY_HEX=$(printf '%x' "$((255*${OPACITY}/100))")
	OUTPUT=$(echo $OUTPUT | jq ".opacity = { \"percentage\": $OPACITY, \"inverse\": $OPACITY_INVERSE, \"hex\": \"$OPACITY_HEX\" }")

	local COLOR_SCHEME=$(echo $OUTPUT | jq -r '.colors')
	local COLORS=$(jq -r '.' $COLORS_DIR/$COLOR_SCHEME.json)
	OUTPUT=$(echo $OUTPUT | jq ".colors = $COLORS")
	OUTPUT=$(echo $OUTPUT | jq ".colors += { \"scheme\": \"$COLOR_SCHEME\" }")

	echo "$OUTPUT" > $GENERATED_THEME
}

function set_wallpaper() {
	feh --no-fehbg --bg-fill "$WALLPAPER_DIR/$(jq -r '.wallpaper' $CONFIG_FILE)"
}

case $1 in
"--template")
	case $2 in
	"")
		echo 'Missing parameter.' >&2; exit 1
		;;
	*)
		test -h "$HOME/.nvm/nvm.sh" && . "$HOME/.nvm/nvm.sh" || exit -1

		render "$2"
		;;
	esac
	;;
"--set")
	test -h "$HOME/.nvm/nvm.sh" && . "$HOME/.nvm/nvm.sh" || exit -1

	generate_theme
	render_all
	;;
"--wall")
    set_wallpaper
	;;
*)
	echo 'Invalid parameter.' >&2; exit 1
	;;
esac
