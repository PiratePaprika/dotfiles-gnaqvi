#!/bin/bash

INACTIVE_COLOR_HEX='#FFFFF'
ICON_FONT_IDX=1

print_icon() {
	echo "%{T$ICON_FONT_IDX}$1%{T-}"
}

get_glyph() {
	case $1 in
		01d) icon='';;
		01n) icon='';;
		02d) icon='';;
		02n) icon='';;
		03*) icon='';;
		04*) icon='';;
		09d) icon='';;
		09n) icon='';;
		10d) icon='';;
		10n) icon='';;
		11d) icon='';;
		11n) icon='';;
		13d) icon='';;
		13n) icon='';;
		50d) icon='';;
		50n) icon='';;
		*) icon='';
	esac

	echo $(print_icon "$icon")
}

get_duration() {
	date --date="@$1" +%I:%M
}

function get_polybar_text() {
	UNITS='metric'
	SYMBOL='°'

	current=$(curl -sf "http://api.openweathermap.org/data/2.5/weather?APPID=$OPW_KEY&id=$CITY&units=$UNITS")
	forecast=$(curl -sf "http://api.openweathermap.org/data/2.5/forecast?APPID=$OPW_KEY&id=$CITY&units=$UNITS&cnt=1")

	if [ ! -z "$current" ] && [ ! -z "$forecast" ]; then
		current_temp=$(echo "$current" | jq ".main.temp" | cut -d "." -f 1)
		current_icon=$(echo "$current" | jq -r ".weather[].icon")

		forecast_temp=$(echo "$forecast" | jq ".list[].main.temp" | cut -d "." -f 1)
		forecast_icon=$(echo "$forecast" | jq -r ".list[].weather[].icon")

		if [ "$current_temp" -gt "$forecast_temp" ]; then
			trend=$(print_icon '')
		elif [ "$forecast_temp" -gt "$current_temp" ]; then
			trend=$(print_icon '')
		else
			trend=$(print_icon '' )
		fi

		sun_rise="$(print_icon '') $(get_duration "$(echo "$current" | jq ".sys.sunrise")")"
		sun_set="$(print_icon '') $(get_duration "$(echo "$current" | jq ".sys.sunset")")"

		echo "$(get_glyph "$current_icon") $current_temp$(print_icon $SYMBOL)  $trend  $(get_glyph "$forecast_icon") $forecast_temp$(print_icon $SYMBOL)   $sun_rise   $sun_set"
	else
		echo "%{F$INACTIVE_COLOR_HEX}%{F-} Unable to get forecast"
	fi
}

function open_browser() {
	xdg-open "https://openweathermap.org/city/${CITY}"
}

case $1 in
"-p")
	if [ "$#" -ne 4 ]; then
		echo "Missing inactive color or font code." && exit 1
	else
		INACTIVE_COLOR_HEX=$2
		ICON_FONT_IDX=$4
		get_polybar_text
	fi
	;;
"-o")
	open_browser
	;;
*)
	echo "Invalid parameters." && exit 1
	;;
esac
